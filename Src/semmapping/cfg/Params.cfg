#!/usr/bin/env python
PACKAGE = 'semmapping'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#list of parameters
euclidean = gen.add_group("Euclidean clustering", state = True)
euclidean.add('euc_min_cluster', int_t, 0, "min cluster size for euclidean clustering", 50,  0, 10000)
euclidean.add('euc_tolerance', double_t, 0, "tolerance for euclidean clustering",  .03, 0,   1)

wall_detection = gen.add_group("wall detection", state = True)
wall_detection.add('mps_min_inliers', int_t, 0, "min inlier size for mps", 1000,  0, 100000)
wall_detection.add('mps_angular_threshold', double_t, 0, "Angular threshold for mps",  3.0, 0.,   180.)
wall_detection.add('mps_distance_threshold', double_t, 0, "distance threshold for mps",  .02, 0., 1.)
wall_detection.add('ne_depth_change_factor', double_t, 0, "depth change factor for ne",  .02, 0., 1.)
wall_detection.add('ne_smoothing_size', double_t, 0, "smoothing size for ne",  20., 0., 180.)
wall_detection.add('eapc_distance_threshold', double_t, 0, "distance threshold for eapc", .01, 0., 1.)

diverse = gen.add_group("diverse", state = True)
diverse.add('vog_leaf_size', double_t, 0, "links min", .02, 0, 1.)

queue = gen.add_group("Queue", state = True)
queue.add('queue_size', int_t, 0, "size of Queue", 15, 0, 100)
queue.add('certainty_thresh', double_t, 0, "threshold of when to delete obj", .25, 0, 1.)
queue.add('queue_thresh', int_t, 0, "queue threshold of min queue len", 10, 0, 100)

view = gen.add_group("view", state = True)
view.add('view_min', double_t, 0, "min value of visibility polygon", .4, 0, 1.)
view.add('view_max', double_t, 0, "max value of visibility polygon", 1.8, 0, 5.)

exit(gen.generate(PACKAGE, "mapping", "Params"))
