#!/usr/bin/env python
PACKAGE = 'semmapping'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#list of parameters
euclidean = gen.add_group("Euclidean clustering", state = True)
euclidean.add('euc_min_cluster', int_t, 0, "min cluster size for euclidean clustering", 250,  0, 10000)
euclidean.add('euc_tolerance', double_t, 0, "tolerance for euclidean clustering",  .1, 0,   1)

wall_detection = gen.add_group("wall detection", state = True)
wall_detection.add('mps_min_inliers', int_t, 0, "min inlier size for mps", 1000,  0, 100000)
wall_detection.add('mps_angular_threshold', double_t, 0, "Angular threshold for mps",  3.0, 0.,   180.)
wall_detection.add('mps_distance_threshold', double_t, 0, "distance threshold for mps",  .02, 0., 1.)
wall_detection.add('ne_depth_change_factor', double_t, 0, "depth change factor for ne",  .1, 0., 1.)
wall_detection.add('ne_smoothing_size', double_t, 0, "smoothing size for ne",  50., 0., 180.)
wall_detection.add('eapc_distance_threshold', double_t, 0, "distance threshold for eapc", .01, 0., 1.)

pre_filter = gen.add_group("pre filter", state = True)
pre_filter.add('links_min', double_t, 0, "links min", .2, -1., 1.)
pre_filter.add('links_max', double_t, 0, "links max",  .1, 0., 10.)
pre_filter.add('rechts_min', double_t, 0, "recht min",  .9, 0.00, 1.00)
pre_filter.add('rechts_max', double_t, 0, "rechts max",  .1, 0., 10.)
pre_filter.add('hinten_min', double_t, 0, "hinten min",  1, 0.00, 5.00)
pre_filter.add('hinten_max', double_t, 0, "hinten max", 5, 5., 10.)

exit(gen.generate(PACKAGE, "mapping", "Params"))
